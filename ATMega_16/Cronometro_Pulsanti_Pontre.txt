/*********************************************
  NOME FILE   : ___.c
  DESCRIZIONE : 
  MCU	      : Atmel ATmega16 @ 8MHz
  COMPILATORE : WinAVR-20070525 (GCC 4.1.2)
  AUTORE      : 
  VERSIONE    : 1.0
*********************************************/
#include "common.h"
#include "lcd.h"
#include <stdio.h>

/*********************************************
   FUNZIONE   : mcu_setup
   DESCRIZIONE: Inizializzazione periferiche MCU.
   PARAMETRI  : nessuno
   RETURN CODE: nessuno
*********************************************/
void mcu_setup(void)
{
	// Configurazione porte
	DDRA  = 0b11110000;	
	PORTA = 0b00001111;
	DDRB  = 0b00000000;
	PORTB = 0b11111111;
	DDRC  = 0b00000000;
	PORTC = 0b11111111;
	DDRD  = 0b01010000;
	PORTD = 0b10101111;
	
	LCD_init();
	LCD_clear();
	LCD_home();
	LCD_cursor(1);
	
	//configurazione display
	

	// Configurazione periferiche utilizzate
	


	// watchdog
	wdt_reset();                   
	wdt_disable();        //disabilita wdt

	// interrupt
	SEI();                //abilita interruzioni
}


/*********************************************
   FUNZIONE   : main
   DESCRIZIONE: Main loop
   PARAMETRI  : nessuno
   RETURN CODE: ignorato
*********************************************/

int I=0;
int B=0;
int ore=0;
int minuti=0;
int secondi=0;
char stringatot[20];
char inizio[16];

/*

PB3 = Start
PB4 = Stop
PB5 = Reset

*/
int main(void)
{
	mcu_setup();
	
	while(1) 
	{
					if(I==0)
					{
						sprintf(inizio,"Premere PB3");
						LCD_writeln(0,inizio);
					}
		
		if(!TST(PINB,4))			//pstop premuto?
		{
			I=0;
			LCD_writeln(0,stringatot);
		}
						
		if(!TST(PINB,3))			//pstart premuto?
		{I=1;}
			
		if(!TST(PINB,5))			//reset premuto?
		{
			ore=0;
			minuti=0;
			secondi=0;
		}
			
		if(!TST(PINB,5) && I==0)			//se il timer Ã¨ fermo e resettato
		{
			sprintf(inizio,"Premere PB3");
			LCD_writeln(0,inizio);
		}
		while(I==1)
		{
			
		delayMs(100);
		secondi++;	
		
				if(minuti<10 && secondi<10)
				{
					sprintf(stringatot,"0%d : 0%d : 0%d ",ore,minuti,secondi);
					
					LCD_writeln(0,stringatot);
					
				}
						if(minuti<10 && secondi>=10)
						{
							sprintf(stringatot,"0%d : 0%d : %d ",ore,minuti,secondi);
							
							LCD_writeln(0,stringatot);
							
						}
								if(minuti>=10 && secondi>=10)
								{
									sprintf(stringatot,"0%d : %d : %d ",ore,minuti,secondi);
									
									LCD_writeln(0,stringatot);
									
								}
										if(minuti>=10 && secondi<10)
										{
											sprintf(stringatot,"0%d : %d : 0%d ",ore,minuti,secondi);
											
											LCD_writeln(0,stringatot);
											
										}
										
		
		if(secondi==60)
		{
			minuti++;
			secondi=0;
		}
		if(minuti==60)
		{
			ore++;
			minuti=0;
		}
		
		}
		
	}
}

